@article{heath2011linked,
	title={Linked data: Evolving the web into a global data space},
	author={Heath, Tom and Bizer, Christian},
	journal={Synthesis lectures on the semantic web: theory and technology},
	volume={1},
	number={1},
	pages={1--136},
	year={2011},
	publisher={Morgan \& Claypool Publishers}
}

@article{ryman2013oslc,
	title={OSLC Resource Shape: A language for defining constraints on Linked Data.},
	author={Ryman, Arthur G and Le Hors, Arnaud and Speicher, Steve},
	journal={LDOW},
	volume={996},
	year={2013},
	publisher={Citeseer}
}

@article{parr2014adaptive,
	title={Adaptive LL (*) parsing: the power of dynamic analysis},
	author={Parr, Terence and Harwell, Sam and Fisher, Kathleen},
	journal={ACM SIGPLAN Notices},
	volume={49},
	number={10},
	pages={579--598},
	year={2014},
	publisher={ACM New York, NY, USA}
}

@inproceedings{staworko2015complexity,
	title={Complexity and Expressiveness of ShEx for RDF},
	author={Staworko, Slawomir and Boneva, Iovka and Gayo, Jose Emilio Labra and Hym, Samuel and Prud'Hommeaux, Eric Gordon and Solbrig, Harold},
	year={2015}
}

@article{boneva2019semi,
	title={Semi Automatic Construction of ShEx and SHACL Schemas},
	author={Boneva, Iovka and Dusart, J{\'e}r{\'e}mie and Alvarez, Daniel Fern{\'a}ndez and Gayo, Jose Emilio Labra},
	year={2019}
}

@article{gayo2017validating,
	title={Validating RDF data},
	author={Gayo, Jose Emilio Labra and Prud'Hommeaux, Eric and Boneva, Iovka and Kontokostas, Dimitris},
	journal={Synthesis Lectures on Semantic Web: Theory and Technology},
	volume={7},
	number={1},
	pages={1--328},
	year={2017},
	publisher={Morgan \& Claypool Publishers}
}

@article{garciashexml,
	title={ShExML: An heterogeneous data mapping language based on ShEx},
	author={Garcia-Gonzalez, Herminio and Fernandez-Alvarez, Daniel and Emilio, Jose}
}

@incollection{labra2019challenges,
	title={Challenges in RDF validation},
	author={Labra-Gayo, Jose Emilio and Garc{\'\i}a-Gonz{\'a}lez, Herminio and Fern{\'a}ndez-Alvarez, Daniel and Prud’hommeaux, Eric},
	booktitle={Current Trends in Semantic Web Technologies: Theory and Practice},
	pages={121--151},
	year={2019},
	publisher={Springer}
}

@inproceedings{boneva2017semantics,
	title={Semantics and validation of shapes schemas for RDF},
	author={Boneva, Iovka and Gayo, Jose E Labra and Prud’hommeaux, Eric G},
	booktitle={International Semantic Web Conference},
	pages={104--120},
	year={2017},
	organization={Springer}
}

@inproceedings{prud2014shape,
	title={Shape expressions: an RDF validation and transformation language},
	author={Prud'hommeaux, Eric and Labra Gayo, Jose Emilio and Solbrig, Harold},
	booktitle={Proceedings of the 10th International Conference on Semantic Systems},
	pages={32--40},
	year={2014}
}

@misc{w3c-www-design-issues,
	File = {Design Issues for the World Wide Web:/Users/willy/Zotero/storage/6CSP3ZCZ/DesignIssues.html:text/html},
	Title = {Design {Issues} for the {World} {Wide} {Web}},
	Url = {https://www.w3.org/DesignIssues/},
	Urldate = {2020-05-25},
	Bdsk-Url-1 = {https://www.w3.org/DesignIssues/}}

@misc{dsl,
	Abstract = {A domain-specific language (DSL) is a computer language specialized to a particular application domain. This is in contrast to a general-purpose language (GPL), which is broadly applicable across domains. There are a wide variety of DSLs, ranging from widely used languages for common domains, such as HTML for web pages, down to languages used by only one or a few pieces of software, such as MUSH soft code. DSLs can be further subdivided by the kind of language, and include domain-specific markup languages, domain-specific modeling languages (more generally, specification languages), and domain-specific programming languages. Special-purpose computer languages have always existed in the computer age, but the term "domain-specific language" has become more popular due to the rise of domain-specific modeling. Simpler DSLs, particularly ones used by a single application, are sometimes informally called mini-languages.
	The line between general-purpose languages and domain-specific languages is not always sharp, as a language may have specialized features for a particular domain but be applicable more broadly, or conversely may in principle be capable of broad application but in practice used primarily for a specific domain. For example, Perl was originally developed as a text-processing and glue language, for the same domain as AWK and shell scripts, but was mostly used as a general-purpose programming language later on. By contrast, PostScript is a Turing complete language, and in principle can be used for any task, but in practice is narrowly used as a page description language.},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/98ZI3TUU/index.html:text/html},
	Journal = {Wikipedia},
	Language = {en},
	Month = mar,
	Note = {Page Version ID: 945660040},
	Title = {Domain-specific language},
	Url = {https://en.wikipedia.org/w/index.php?title=Domain-specific_language&oldid=945660040},
	Urldate = {2020-05-26},
	Year = {2020},
	Bdsk-Url-1 = {https://en.wikipedia.org/w/index.php?title=Domain-specific_language&oldid=945660040}}

@misc{dotNet,
	Abstract = {The Roslyn .NET compiler provides C\# and Visual Basic languages with rich code analysis APIs. - dotnet/roslyn},
	File = {Snapshot:/Users/willy/Zotero/storage/47SCIQXZ/Roslyn Overview.html:text/html},
	Journal = {GitHub},
	Language = {en},
	Note = {Library Catalog: github.com},
	Title = {dotnet/roslyn},
	Url = {https://github.com/dotnet/roslyn},
	Urldate = {2020-05-24},
	Bdsk-Url-1 = {https://github.com/dotnet/roslyn}}

@misc{ide,
	Abstract = {Un entorno de desarrollo integrado[1]​[2]​ o entorno de desarrollo interactivo, en ingl{\'e}s Integrated Development Environment (IDE), es una aplicaci{\'o}n inform{\'a}tica que proporciona servicios integrales para facilitarle al desarrollador o programador el desarrollo de software.
	Normalmente, un IDE consiste de un editor de c{\'o}digo fuente, herramientas de construcci{\'o}n autom{\'a}ticas y un depurador. La mayor{\'\i}a de los IDE tienen auto-completado inteligente de c{\'o}digo (IntelliSense). Algunos IDE contienen un compilador, un int{\'e}rprete, o ambos, tales como NetBeans y Eclipse; otros no, tales como SharpDevelop y Lazarus.
	El l{\'\i}mite entre un IDE y otras partes del entorno de desarrollo de software m{\'a}s amplio no est{\'a} bien definido. Muchas veces, a los efectos de simplificar la construcci{\'o}n de la interfaz gr{\'a}fica de usuario (GUI, por sus siglas en ingl{\'e}s) se integran un sistema controlador de versi{\'o}n y varias herramientas. Muchos IDE modernos tambi{\'e}n cuentan con un navegador de clases, un buscador de objetos y un diagrama de jerarqu{\'\i}a de clases, para su uso con el desarrollo de software orientado a objetos.},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/TRB6LMBJ/index.html:text/html},
	Journal = {Wikipedia, la enciclopedia libre},
	Language = {es},
	Month = may,
	Note = {Page Version ID: 126109294},
	Title = {Entorno de desarrollo integrado},
	Url = {https://es.wikipedia.org/w/index.php?title=Entorno_de_desarrollo_integrado&oldid=126109294},
	Urldate = {2020-05-26},
	Year = {2020},
	Bdsk-Url-1 = {https://es.wikipedia.org/w/index.php?title=Entorno_de_desarrollo_integrado&oldid=126109294}}

@misc{hercules-um,
	Abstract = {Inicio - H{\'e}rcules - Universidad de Murcia},
	File = {Snapshot:/Users/willy/Zotero/storage/T8RSVLBG/hercules.html:text/html},
	Language = {es-ES},
	Note = {Library Catalog: www.um.es},
	Title = {H{\'e}rcules - {Universidad} de {Murcia}},
	Url = {https://www.um.es/web/hercules/},
	Urldate = {2020-05-25},
	Bdsk-Url-1 = {https://www.um.es/web/hercules/}}

@misc{lexical-analysis,
	Abstract = {In computer science, lexical analysis, lexing or tokenization is the process of converting a sequence of characters (such as in a computer program or web page) into a sequence of tokens (strings with an assigned and thus identified meaning). A program that performs lexical analysis may be termed a lexer, tokenizer, or scanner, though scanner is also a term for the first stage of a lexer. A lexer is generally combined with a parser, which together analyze the syntax of programming languages, web pages, and so forth.},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/ULAQDI4N/index.html:text/html},
	Journal = {Wikipedia},
	Language = {en},
	Month = may,
	Note = {Page Version ID: 955735363},
	Title = {Lexical analysis},
	Url = {https://en.wikipedia.org/w/index.php?title=Lexical_analysis&oldid=955735363},
	Urldate = {2020-05-26},
	Year = {2020},
	Bdsk-Url-1 = {https://en.wikipedia.org/w/index.php?title=Lexical_analysis&oldid=955735363}}

@misc{oopl,
	Abstract = {This is a list of notable programming languages with object-oriented programming (OOP) features, which are also listed in Category:Object-oriented programming languages. Note that, in some contexts, the definition of an "object-oriented programming language" is not exactly the same as that of a "programming language with object-oriented features". For example, C++ is a multi-paradigm language including object-oriented paradigm; however, it is less object-oriented than some other languages such as Python and Ruby. Therefore, someone considers C++ as an OOP language, while others do not or prefer to name it as "semi-object-oriented programming language".},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/F2ZKIHES/index.html:text/html},
	Journal = {Wikipedia},
	Language = {en},
	Month = apr,
	Note = {Page Version ID: 950660258},
	Title = {List of object-oriented programming languages},
	Url = {https://en.wikipedia.org/w/index.php?title=List_of_object-oriented_programming_languages&oldid=950660258},
	Urldate = {2020-05-25},
	Year = {2020},
	Bdsk-Url-1 = {https://en.wikipedia.org/w/index.php?title=List_of_object-oriented_programming_languages&oldid=950660258}}

@misc{compiler-optimizations,
	Abstract = {In computing, an optimizing compiler is a compiler that tries to minimize or maximize some attributes of an executable computer program. Common requirements are to minimize a program's execution time, memory requirement, and power consumption (the last two being popular for portable computers).
	Compiler optimization is generally implemented using a sequence of optimizing transformations, algorithms which take a program and transform it to produce a semantically equivalent output program that uses fewer resources and/or executes faster. It has been shown that some code optimization problems are NP-complete, or even undecidable. In practice, factors such as the programmer's willingness to wait for the compiler to complete its task place upper limits on the optimizations that a compiler implementer might provide. (Optimization is generally a very CPU- and memory-intensive process.) In the past, computer memory limitations were also a major factor in limiting which optimizations could be performed. Because of these factors, optimization rarely produces "optimal" output in any sense, and in fact, an "optimization" may impede performance in some cases; rather, they are heuristic methods for improving resource usage in typical programs.},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/TZDR9WT8/index.html:text/html},
	Journal = {Wikipedia},
	Language = {en},
	Month = apr,
	Note = {Page Version ID: 949660274},
	Title = {Optimizing compiler},
	Url = {https://en.wikipedia.org/w/index.php?title=Optimizing_compiler&oldid=949660274},
	Urldate = {2020-05-26},
	Year = {2020},
	Bdsk-Url-1 = {https://en.wikipedia.org/w/index.php?title=Optimizing_compiler&oldid=949660274}}

@misc{pojo,
	Abstract = {Un POJO (acr{\'o}nimo de Plain Old Java Object) es una sigla creada por Martin Fowler, Rebecca Parsons y Josh MacKenzie en septiembre de 2000 y utilizada por programadores Java para enfatizar el uso de clases simples y que no dependen de un framework en especial. Este acr{\'o}nimo surge como una reacci{\'o}n en el mundo Java a los frameworks cada vez m{\'a}s complejos, y que requieren un complicado andamiaje que esconde el problema que realmente se est{\'a} modelando. En particular surge en oposici{\'o}n al modelo planteado por los est{\'a}ndares EJB anteriores al 3.0, en los que los "Enterprise JavaBeans" deb{\'\i}an implementar interfaces especiales.
	POJO es una nueva palabra para designar algo viejo, tan viejo como una tarjeta perforada. No existe en Java una nueva tecnolog{\'\i}a con ese nombre, sino que el nombre existe en el marco de una revalorizaci{\'o}n de la programaci{\'o}n "simplemente orientada a objetos". Esta revalorizaci{\'o}n tiene que ver tambi{\'e}n con el {\'e}xito de lenguajes orientados a objetos m{\'a}s puros[cita requerida] y sencillos, que empezaron a tomar parte del mercado al que Java apunta, como Ruby y Python.
	Un objeto POJO es una instancia de una clase que no extiende ni implementa nada en especial. Por ejemplo, un Servlet tiene que extender de HttpServlet y sobrescribir sus m{\'e}todos, por lo tanto no es un POJO. En cambio, si se define una clase 'Persona', con sus atributos privados y sus correspondientes getters y setters p{\'u}blicos, una instancia de esta simple clase es un objeto POJO.
	El t{\'e}rmino sigue la l{\'\i}nea de otras siglas similares, como POTS (Plain Old Telephone System) o PODS (Plain Old Data Structures) utilizada para describir a simples "struct" en el contexto de la programaci{\'o}n C++.
	Con el auge de JSON se utilizan  POJO para serializar los objetos en formato json, con bibliotecas como Gson.},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/IA895AHG/index.html:text/html},
	Journal = {Wikipedia, la enciclopedia libre},
	Language = {es},
	Month = oct,
	Note = {Page Version ID: 120228634},
	Title = {Plain {Old} {Java} {Object}},
	Url = {https://es.wikipedia.org/w/index.php?title=Plain_Old_Java_Object&oldid=120228634},
	Urldate = {2020-05-25},
	Year = {2019},
	Bdsk-Url-1 = {https://es.wikipedia.org/w/index.php?title=Plain_Old_Java_Object&oldid=120228634}}

@misc{programing-language,
	Abstract = {A programming language is a formal language comprising a set of instructions that produce various kinds of output. Programming languages are used in computer programming to implement algorithms.
	Most programming languages consist of instructions for computers. There are programmable machines that use a set of specific instructions, rather than general programming languages. Early ones preceded the invention of the digital computer, the first probably being the automatic flute player described in the 9th century by the brothers Musa in Baghdad, during the Islamic Golden Age. Since the early 1800s, programs have been used to direct the behavior of machines such as Jacquard looms, music boxes and player pianos. The programs for these machines (such as a player piano's scrolls) did not produce different behavior in response to different inputs or conditions.
	Thousands of different programming languages have been created, and more are being created every year. Many programming languages are written in an imperative form (i.e., as a sequence of operations to perform) while other languages use the declarative form (i.e. the desired result is specified, not how to achieve it).
	The description of a programming language is usually split into the two components of syntax (form) and semantics (meaning). Some languages are defined by a specification document (for example, the C programming language is specified by an ISO Standard) while other languages (such as Perl) have a dominant implementation that is treated as a reference. Some languages have both, with the basic language defined by a standard and extensions taken from the dominant implementation being common.},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/4B6WS8RG/index.html:text/html},
	Journal = {Wikipedia},
	Language = {en},
	Month = may,
	Note = {Page Version ID: 958722580},
	Title = {Programming language},
	Url = {https://en.wikipedia.org/w/index.php?title=Programming_language&oldid=958722580},
	Urldate = {2020-05-26},
	Year = {2020},
	Bdsk-Url-1 = {https://en.wikipedia.org/w/index.php?title=Programming_language&oldid=958722580}}

@misc{rdf,
	File = {RDF - Semantic Web Standards:/Users/willy/Zotero/storage/VUE4Y7LQ/RDF.html:text/html},
	Title = {{RDF} - {Semantic} {Web} {Standards}},
	Url = {https://www.w3.org/RDF/},
	Urldate = {2020-05-25},
	Bdsk-Url-1 = {https://www.w3.org/RDF/}}

@misc{rdfshape,
	File = {RDFShape:/Users/willy/Zotero/storage/RRH49HMY/rdfshape.weso.es.html:text/html},
	Title = {{RDFShape}},
	Url = {http://rdfshape.weso.es/},
	Urldate = {2020-05-24},
	Bdsk-Url-1 = {http://rdfshape.weso.es/}}

@misc{shaclex,
	File = {SHaclEX library:/Users/willy/Zotero/storage/N3I3GV5M/shaclex.html:text/html},
	Title = {{SHaclEX} library},
	Url = {http://www.weso.es/shaclex/},
	Urldate = {2020-05-25},
	Bdsk-Url-1 = {http://www.weso.es/shaclex/}}

@misc{shexc,
	File = {Shape Expressions Language 2.1:/Users/willy/Zotero/storage/72V49RPF/shex-semantics.html:text/html},
	Title = {Shape {Expressions} {Language} 2.1},
	Url = {https://shex.io/shex-semantics/#shexc},
	Urldate = {2020-05-23},
	Bdsk-Url-1 = {https://shex.io/shex-semantics/#shexc}}

@misc{sparql,
	File = {SPARQL Query Language for RDF:/Users/willy/Zotero/storage/UAD2FNBL/rdf-sparql-query.html:text/html},
	Title = {{SPARQL} {Query} {Language} for {RDF}},
	Url = {https://www.w3.org/TR/rdf-sparql-query/},
	Urldate = {2020-05-23},
	Bdsk-Url-1 = {https://www.w3.org/TR/rdf-sparql-query/}}

@misc{swift,
	Abstract = {Swift is a general-purpose programming language built using a modern approach to safety, performance, and software design patterns.},
	Author = {Inc, Apple},
	File = {Snapshot:/Users/willy/Zotero/storage/4B25VW9R/swift-compiler.html:text/html},
	Journal = {Swift.org},
	Language = {en},
	Note = {Library Catalog: swift.org},
	Title = {Swift.org},
	Url = {https://swift.org},
	Urldate = {2020-05-24},
	Bdsk-Url-1 = {https://swift.org}}

@misc{touring-complete,
	Abstract = {In computability theory, a system of data-manipulation rules (such as a computer's instruction set, a programming language, or a cellular automaton) is said to be Turing-complete or computationally universal if it can be used to simulate any Turing machine. This means that this system is able to recognize or decide other data-manipulation rule sets. Turing completeness is used as a way to express the power of such a data-manipulation rule set. Virtually all programming languages today are Turing-complete. The concept is named after English mathematician and computer scientist Alan Turing.
	A related concept is that of Turing equivalence --  two computers P and Q are called equivalent if P can simulate Q and Q can simulate P. The Church--Turing thesis conjectures that any function whose values can be computed by an algorithm can be computed by a Turing machine, and therefore that if any real-world computer can simulate a Turing machine, it is Turing equivalent to a Turing machine. A universal Turing machine can be used to simulate any Turing machine and by extension the computational aspects of any possible real-world computer.To show that something is Turing-complete, it is enough to show that it can be used to simulate some Turing-complete system. For example, an imperative language is Turing-complete if it has conditional branching (e.g., "if" and "goto" statements, or a "branch if zero" instruction; see one-instruction set computer) and the ability to change an arbitrary amount of memory (e.g., the ability to maintain an arbitrary number of data items). Of course, no physical system can have infinite memory; but if the limitation of finite memory is ignored, most programming languages are otherwise Turing-complete.},
	Copyright = {Creative Commons Attribution-ShareAlike License},
	File = {Snapshot:/Users/willy/Zotero/storage/75BP6CG5/index.html:text/html},
	Journal = {Wikipedia},
	Language = {en},
	Month = may,
	Note = {Page Version ID: 954916159},
	Title = {Turing completeness},
	Url = {https://en.wikipedia.org/w/index.php?title=Turing_completeness&oldid=954916159},
	Urldate = {2020-05-26},
	Year = {2020},
	Bdsk-Url-1 = {https://en.wikipedia.org/w/index.php?title=Turing_completeness&oldid=954916159}}

@misc{turtle,
	File = {Turtle - Terse RDF Triple Language:/Users/willy/Zotero/storage/7P839V2A/turtle.html:text/html},
	Title = {Turtle - {Terse} {RDF} {Triple} {Language}},
	Url = {https://www.w3.org/TeamSubmission/turtle/#sec-grammar},
	Urldate = {2020-05-23},
	Bdsk-Url-1 = {https://www.w3.org/TeamSubmission/turtle/#sec-grammar}}

@misc{rustc,
	File = {What is rustc? - The rustc book:/Users/willy/Zotero/storage/U4NK2SK5/index.html:text/html},
	Title = {What is rustc? - {The} rustc book},
	Url = {https://doc.rust-lang.org/rustc/index.html},
	Urldate = {2020-05-24},
	Bdsk-Url-1 = {https://doc.rust-lang.org/rustc/index.html}}

@misc{yashe,
	File = {YASHE:/Users/willy/Zotero/storage/L7BFBPFK/YASHE.html:text/html},
	Title = {{YASHE}},
	Url = {http://www.weso.es/YASHE/},
	Urldate = {2020-05-25},
	Bdsk-Url-1 = {http://www.weso.es/YASHE/}}




@misc{KOMAScriptDoc,
	title = {{KOMA-Script Documentationssssssss Project {$\vert$} Aktive Anwender verbessern KOMA-Script.}},
	year = {2019},
	month = {Feb},
	note = {[Online; accessed 18. Feb. 2019]},
	url = {https://komascript.de}
}
@book{James2013,
abstract = {... But ESL is intended for individuals with ad- vanced training in the mathematical sciences. An Introduction to Statistical Learning (ISL) arose from the perceived need for a broader and less tech- nical treatment of these topics. ... $\backslash$n},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {James, Gareth and Witten, Daniela and Hastie, Trevor and Tibshirani, Robert},
booktitle = {An Introd. to Stat. Learn.},
doi = {10.1007/978-1-4614-7138-7},
eprint = {arXiv:1011.1669v3},
isbn = {978-1-4614-7137-0},
issn = {01621459},
pmid = {10911016},
title = {{An Introduction to Statistical Learning}},
url = {http://link.springer.com/content/pdf/10.1007/978-1-4614-7138-7.pdf{\%}5Cnhttp://link.springer.com/10.1007/978-1-4614-7138-7},
year = {2013}
}
@article{Battle2014,
abstract = {Understanding the consequences of regulatory variation in the human genome remains a major challenge, with important implications for understanding gene regulation and interpreting the many disease-risk variants that fall outside of protein-coding regions. Here, we provide a direct window into the regulatory consequences of genetic variation by sequencing RNA from 922 genotyped individuals. We present a comprehensive description of the distribution of regulatory variation--by the specific expression phenotypes altered, the properties of affected genes, and the genomic characteristics of regulatory variants. We detect variants influencing expression of over ten thousand genes, and through the enhanced resolution offered by RNA-sequencing, for the first time we identify thousands of variants associated with specific phenotypes including splicing and allelic expression. Evaluating the effects of both long-range intra-chromosomal and trans (cross-chromosomal) regulation, we observe modularity in the regulatory network, with three-dimensional chromosomal configuration playing a particular role in regulatory modules within each chromosome. We also observe a significant depletion of regulatory variants affecting central and critical genes, along with a trend of reduced effect sizes as variant frequency increases, providing evidence that purifying selection and buffering have limited the deleterious impact of regulatory variation on the cell. Further, generalizing beyond observed variants, we have analyzed the genomic properties of variants associated with expression and splicing and developed a Bayesian model to predict regulatory consequences of genetic variants, applicable to the interpretation of individual genomes and disease studies. Together, these results represent a critical step toward characterizing the complete landscape of human regulatory variation.},
archivePrefix = {arXiv},
arxivId = {NIHMS150003},
author = {Battle, Alexis and Mostafavi, Sara and Zhu, Xiaowei and Potash, James B. and Weissman, Myrna M. and McCormick, Courtney and Haudenschild, Christian D. and Beckman, Kenneth B. and Shi, Jianxin and Mei, Rui and Urban, Alexander E. and Montgomery, Stephen B. and Levinson, Douglas F. and Koller, Daphne},
doi = {10.1101/gr.155192.113},
eprint = {NIHMS150003},
isbn = {1549-5469 (Electronic)$\backslash$r1088-9051 (Linking)},
issn = {10889051},
journal = {Genome Res.},
number = {1},
pages = {14--24},
pmid = {24092820},
title = {{Characterizing the genetic basis of transcriptome diversity through RNA-sequencing of 922 individualsssssssss}},
volume = {24},
year = {2014}
}
@article{Zou2005,
abstract = {We propose the elastic net, a new regularization and variable selection method. Real world data and a simulation study show that the elastic net often outperforms the lasso, while enjoying a similar sparsity of representation. In addition, the elastic net encourages a grouping effect, where strongly correlated predictors tend to be in or out of the model together. The elastic net is particularly useful when the number of predictors (p) is much bigger than the number of observations (n). By contrast, the lasso is not a very satisfactory variable selection method in the p≫n case. An algorithm called LARS-EN is proposed for computing elastic net regularization paths efficiently, much like algorithm LARS does for the lasso.},
author = {Zou, Hui and Hastie, Trevor},
doi = {10.1111/j.1467-9868.2005.00503.x},
isbn = {1369-7412},
issn = {13697412},
journal = {J. R. Stat. Soc.},
keywords = {grouping effect,lars algorithm,lasso,p,penalization},
number = {2},
pages = {301--320},
pmid = {20713001},
title = {{Regularization and variable selection via the elastic-net}},
volume = {67},
year = {2005}
}
@article{Lappalainen2013,
abstract = {Genome sequencing projects are discovering millions of genetic variants in humans, and interpretation of their functional effects is essential for understanding the genetic basis of variation in human traits. Here we report sequencing and deep analysis of messenger RNA and microRNA from lymphoblastoid cell lines of 462 individuals from the 1000 Genomes Project--the first uniformly processed high-throughput RNA-sequencing data from multiple human populations with high-quality genome sequences. We discover extremely widespread genetic variation affecting the regulation of most genes, with transcript structure and expression level variation being equally common but genetically largely independent. Our characterization of causal regulatory variation sheds light on the cellular mechanisms of regulatory and loss-of-function variation, and allows us to infer putative causal variants for dozens of disease-associated loci. Altogether, this study provides a deep understanding of the cellular mechanisms of transcriptome variation and of the landscape of functional variants in the human genome.},
archivePrefix = {arXiv},
arxivId = {NIHMS150003},
author = {Lappalainen, Tuuli and Sammeth, Michael and Friedl{\"{a}}nder, Marc R. and {'T Hoen}, Peter A.C. and Monlong, Jean and Rivas, Manuel A. and Gonz{\`{a}}lez-Porta, Mar and Kurbatova, Natalja and Griebel, Thasso and Ferreira, Pedro G. and Barann, Matthias and Wieland, Thomas and Greger, Liliana and {Van Iterson}, Maarten and Alml{\"{o}}f, Jonas and Ribeca, Paolo and Pulyakhina, Irina and Esser, Daniela and Giger, Thomas and Tikhonov, Andrew and Sultan, Marc and Bertier, Gabrielle and Macarthur, Daniel G. and Lek, Monkol and Lizano, Esther and Buermans, Henk P.J. and Padioleau, Ismael and Schwarzmayr, Thomas and Karlberg, Olof and Ongen, Halit and Kilpinen, Helena and Beltran, Sergi and Gut, Marta and Kahlem, Katja and Amstislavskiy, Vyacheslav and Stegle, Oliver and Pirinen, Matti and Montgomery, Stephen B. and Donnelly, Peter and McCarthy, Mark I. and Flicek, Paul and Strom, Tim M. and Lehrach, Hans and Schreiber, Stefan and Sudbrak, Ralf and Carracedo, {\'{A}}ngel and Antonarakis, Stylianos E. and H{\"{a}}sler, Robert and Syv{\"{a}}nen, Ann Christine and {Van Ommen}, Gert Jan and Brazma, Alvis and Meitinger, Thomas and Rosenstiel, Philip and Guig{\'{o}}, Roderic and Gut, Ivo G. and Estivill, Xavier and Dermitzakis, Emmanouil T.},
doi = {10.1038/nature12531},
eprint = {NIHMS150003},
isbn = {1476-4687 (Electronic)$\backslash$r0028-0836 (Linking)},
issn = {00280836},
journal = {Nature},
number = {7468},
pages = {506--511},
pmid = {24037378},
title = {{Transcriptome and genome sequencing uncovers functional variation in humans}},
volume = {501},
year = {2013}
}
@article{ENCODEProjectConsortium2012,
abstract = {The human genome encodes the blueprint of life, but the function of the vast majority of its nearly three billion bases is unknown. The Encyclopedia of DNA Elements (ENCODE) project has systematically mapped regions of transcription, transcription factor association, chromatin structure and histone modification. These data enabled us to assign biochemical functions for 80{\%} of the genome, in particular outside of the well-studied protein-coding regions. Many discovered candidate regulatory elements are physically associated with one another and with expressed genes, providing new insights into the mechanisms of gene regulation. The newly identified elements also show a statistical correspondence to sequence variants linked to human disease, and can thereby guide interpretation of this variation. Overall, the project provides new insights into the organization and regulation of our genes and genome, and is an expansive resource of functional annotations for biomedical research.},
author = {{ENCODE Project Consortium}, An Integrated Encyclopedia of DNA Elements in the Human},
doi = {10.1038/nature11247},
issn = {1476-4687},
journal = {Nature},
number = {7414},
pages = {57--74},
pmid = {22955616},
title = {{An integrated encyclopedia of DNA elements in the human genome.}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/22955616{\%}5Cnhttp://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC3439153},
volume = {489},
year = {2012}
}
@article{Gusev2018,
abstract = {Genome-wide association studies (GWAS) have identified over 100 risk loci for schizophrenia, but the causal mechanisms remain largely unknown. We performed a transcriptome-wide association study (TWAS) integrating expression data from brain, blood, and adipose tissues across 3,693 individuals with schizophrenia GWAS of 79,845 individuals from the Psychiatric Genomics Consortium. We identified 157 genes with a transcriptome-wide significant association, of which 35 did not overlap a known GWAS locus; the largest number involved alternative splicing in brain. 42/157 genes were also associated to specific chromatin phenotypes measured in 121 independent samples (a 4-fold enrichment over background genes). This high-throughput connection of GWAS findings to specific genes, tissues, and regulatory mechanisms is an essential step toward understanding the biology of schizophrenia and moving towards therapeutic interventions.},
author = {Gusev, Alexander and Mancuso, Nicholas and Won, Hyejung and Kousi, Maria and Finucane, Hilary K. and Reshef, Yakir and Song, Lingyun and Safi, Alexias and McCarroll, Steven and Neale, Benjamin M. and Ophoff, Roel A. and O'Donovan, Michael C. and Crawford, Gregory E. and Geschwind, Daniel H. and Katsanis, Nicholas and Sullivan, Patrick F. and Pasaniuc, Bogdan and Price, Alkes L.},
doi = {10.1038/s41588-018-0092-1},
isbn = {1546-1718},
issn = {15461718},
journal = {Nat. Genet.},
keywords = {TWAS},
mendeley-tags = {TWAS},
number = {4},
pages = {538--548},
pmid = {29632383},
title = {{Transcriptome-wide association study of schizophrenia and chromatin activity yields mechanistic disease insights}},
volume = {50},
year = {2018}
}
@article{Gusev2016,
abstract = {Many genetic variants influence complex traits by modulating gene expression, thus altering the abundance of one or multiple proteins. Here we introduce a powerful strategy that integrates gene expression measurements with summary association statistics from large-scale genome-wide association studies (GWAS) to identify genes whose cis-regulated expression is associated with complex traits. We leverage expression imputation from genetic data to perform a transcriptome-wide association study (TWAS) to identify significant expression-trait associations. We applied our approaches to expression data from blood and adipose tissue measured in ∼3,000 individuals overall. We imputed gene expression into GWAS data from over 900,000 phenotype measurements to identify 69 new genes significantly associated with obesity-related traits (BMI, lipids and height). Many of these genes are associated with relevant phenotypes in the Hybrid Mouse Diversity Panel. Our results showcase the power of integrating genotype, gene expression and phenotype to gain insights into the genetic basis of complex traits.},
archivePrefix = {arXiv},
arxivId = {15334406},
author = {Gusev, Alexander and Ko, Arthur and Shi, Huwenbo and Bhatia, Gaurav and Chung, Wonil and Penninx, Brenda W.J.H. and Jansen, Rick and {De Geus}, Eco J.C. and Boomsma, Dorret I. and Wright, Fred A. and Sullivan, Patrick F. and Nikkola, Elina and Alvarez, Marcus and Civelek, Mete and Lusis, Aldons J. and Lehtim{\"{a}}ki, Terho and Raitoharju, Emma and K{\"{a}}h{\"{o}}nen, Mika and Sepp{\"{a}}l{\"{a}}, Ilkka and Raitakari, Olli T. and Kuusisto, Johanna and Laakso, Markku and Price, Alkes L. and Pajukanta, P{\"{a}}ivi and Pasaniuc, Bogdan},
doi = {10.1038/ng.3506},
eprint = {15334406},
isbn = {1061-4036},
issn = {15461718},
journal = {Nat. Genet.},
keywords = {TWAS},
mendeley-tags = {TWAS},
month = {mar},
number = {3},
pages = {245--252},
pmid = {26854917},
publisher = {Nature Publishing Group},
title = {{Integrative approaches for large-scale transcriptome-wide association studies}},
url = {http://www.nature.com/articles/ng.3506 http://www.ncbi.nlm.nih.gov/pubmed/26854917 http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC4767558},
volume = {48},
year = {2016}
}
@article{Gamazon2015,
abstract = {Genome-wide association studies (GWAS) have identified thousands of variants robustly associated with complex traits. However, the biological mechanisms underlying these associations are, in general, not well understood. We propose a gene-based association method called PrediXcan that directly tests the molecular mechanisms through which genetic variation affects phenotype. The approach estimates the component of gene expression determined by an individual's genetic profile and correlates 'imputed' gene expression with the phenotype under investigation to identify genes involved in the etiology of the phenotype. Genetically regulated gene expression is estimated using whole-genome tissue-dependent prediction models trained with reference transcriptome data sets. PrediXcan enjoys the benefits of gene-based approaches such as reduced multiple-testing burden and a principled approach to the design of follow-up experiments. Our results demonstrate that PrediXcan can detect known and new genes associated with disease traits and provide insights into the mechanism of these associations.},
author = {Gamazon, Eric R. and Wheeler, Heather E. and Shah, Kaanan P. and Mozaffari, Sahar V. and Aquino-Michaels, Keston and Carroll, Robert J. and Eyler, Anne E. and Denny, Joshua C. and Nicolae, Dan L. and Cox, Nancy J. and Im, Hae Kyung},
doi = {10.1038/ng.3367},
isbn = {1061-4036},
issn = {15461718},
journal = {Nat. Genet.},
keywords = {TWAS},
mendeley-tags = {TWAS},
month = {sep},
number = {9},
pages = {1091--1098},
pmid = {26258848},
title = {{A gene-based association method for mapping traits using reference transcriptome data}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/26258848 http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=PMC4552594 http://www.nature.com/articles/ng.3367},
volume = {47},
year = {2015}
}
@misc{Lonsdale2013,
abstract = {Genome-wide association studies have identified thousands of loci for common diseases, but, for the majority of these, the mechanisms underlying disease susceptibility remain unknown. Most associated variants are not correlated with protein-coding changes, suggesting that polymorphisms in regulatory regions probably contribute to many disease phenotypes. Here we describe the Genotype-Tissue Expression (GTEx) project, which will establish a resource database and associated tissue bank for the scientific community to study the relationship between genetic variation and gene expression in human tissues.},
archivePrefix = {arXiv},
arxivId = {NIHMS150003},
author = {Lonsdale, John and Thomas, Jeffrey and Salvatore, Mike and Phillips, Rebecca and Lo, Edmund and Shad, Saboor and Hasz, Richard and Walters, Gary and Garcia, Fernando and Young, Nancy and Foster, Barbara and Moser, Mike and Karasik, Ellen and Gillard, Bryan and Ramsey, Kimberley and Sullivan, Susan and Bridge, Jason and Magazine, Harold and Syron, John and Fleming, Johnelle and Siminoff, Laura and Traino, Heather and Mosavel, Maghboeba and Barker, Laura and Jewell, Scott and Rohrer, Dan and Maxim, Dan and Filkins, Dana and Harbach, Philip and Cortadillo, Eddie and Berghuis, Bree and Turner, Lisa and Hudson, Eric and Feenstra, Kristin and Sobin, Leslie and Robb, James and Branton, Phillip and Korzeniewski, Greg and Shive, Charles and Tabor, David and Qi, Liqun and Groch, Kevin and Nampally, Sreenath and Buia, Steve and Zimmerman, Angela and Smith, Anna and Burges, Robin and Robinson, Karna and Valentino, Kim and Bradbury, Deborah and Cosentino, Mark and Diaz-Mayoral, Norma and Kennedy, Mary and Engel, Theresa and Williams, Penelope and Erickson, Kenyon and Ardlie, Kristin and Winckler, Wendy and Getz, Gad and DeLuca, David and {Daniel MacArthur} and Kellis, Manolis and Thomson, Alexander and Young, Taylor and Gelfand, Ellen and Donovan, Molly and Meng, Yan and Grant, George and Mash, Deborah and Marcus, Yvonne and Basile, Margaret and Liu, Jun and Zhu, Jun and Tu, Zhidong and Cox, Nancy J. and Nicolae, Dan L. and Gamazon, Eric R. and Im, Hae Kyung and Konkashbaev, Anuar and Pritchard, Jonathan and Stevens, Matthew and Flutre, Timoth{\`{e}}e and Wen, Xiaoquan and Dermitzakis, Emmanouil T. and Lappalainen, Tuuli and Guigo, Roderic and Monlong, Jean and Sammeth, Michael and Koller, Daphne and Battle, Alexis and Mostafavi, Sara and McCarthy, Mark and Rivas, Manual and Maller, Julian and Rusyn, Ivan and Nobel, Andrew and Wright, Fred and Shabalin, Andrey and Feolo, Mike and Sharopova, Nataliya and Sturcke, Anne and Paschal, Justin and Anderson, James M. and Wilder, Elizabeth L. and Derr, Leslie K. and Green, Eric D. and Struewing, Jeffery P. and Temple, Gary and Volpi, Simona and Boyer, Joy T. and Thomson, Elizabeth J. and Guyer, Mark S. and Ng, Cathy and Abdallah, Assya and Colantuoni, Deborah and Insel, Thomas R. and Koester, Susan E. and {A Roger Little} and Bender, Patrick K. and Lehner, Thomas and Yao, Yin and Compton, Carolyn C. and Vaught, Jimmie B. and Sawyer, Sherilyn and Lockhart, Nicole C. and Demchok, Joanne and Moore, Helen F.},
booktitle = {Nat. Genet.},
doi = {10.1038/ng.2653},
eprint = {NIHMS150003},
isbn = {1061-4036},
issn = {10614036},
number = {6},
pages = {580--585},
pmid = {23715323},
title = {{The Genotype-Tissue Expression (GTEx) project}},
volume = {45},
year = {2013}
}
@article{Ramasamy2014,
abstract = {Germ-line genetic control of gene expression occurs via expression quantitative trait loci (eQTLs). We present a large, exon-specific eQTL data set covering ten human brain regions. We found that cis-eQTL signals (within 1 Mb of their target gene) were numerous, and many acted heterogeneously among regions and exons. Co-regulation analysis of shared eQTL signals produced well-defined modules of region-specific co-regulated genes, in contrast to standard coexpression analysis of the same samples. We report cis-eQTL signals for 23.1{\%} of catalogued genome-wide association study hits for adult-onset neurological disorders. The data set is publicly available via public data repositories and via http://www.braineac.org/. Our study increases our understanding of the regulation of gene expression in the human brain and will be of value to others pursuing functional follow-up of disease-associated variants.},
author = {Ramasamy, A and Trabzuni, D and Guelfi, S and Varghese, V and Smith, C and Walker, R and De, T and Consortium, U K Brain Expression and {North American Brain Expression}, Consortium and Coin, L and de Silva, R and Cookson, M R and Singleton, A B and Hardy, J and Ryten, M and Weale, M E},
doi = {10.1038/nn.3801},
isbn = {1546-1726 (Electronic)$\backslash$r1097-6256 (Linking)},
issn = {1546-1726; 1097-6256},
journal = {Nat. Neurosci.},
keywords = {*Gene Expression Regulation,*Genetic Predisposition to Disease,*Quantitative Trait Loci,Adolescent,Adult,Aged,Aged, 80 and over,Brain/*anatomy {\&} histology/metabolism,Female,Gene Expression Profiling,Genetic Association Studies,Humans,Male,Middle Aged,Nervous System Diseases/*genetics/*pathology,Oligonucleotide Array Sequence Analysis,Polymorphism, Single Nucleotide,Young Adult},
number = {10},
pages = {1418--1428},
pmid = {25174004},
title = {{Genetic variability in the regulation of gene expression in ten regions of the human brain}},
url = {http://www.ncbi.nlm.nih.gov/pubmed/25174004},
volume = {17},
year = {2014}
}
@article{Visscher2008,
abstract = {Heritability allows a comparison of the relative importance of genes and environment to the variation of traits within and across populations. The concept of heritability and its definition as an estimable, dimensionless population parameter was introduced by Sewall Wright and Ronald Fisher nearly a century ago. Despite continuous misunderstandings and controversies over its use and application, heritability remains key to the response to selection in evolutionary biology and agriculture, and to the prediction of disease risk in medicine. Recent reports of substantial heritability for gene expression and new estimation methods using marker data highlight the relevance of heritability in the genomics era.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Visscher, Peter M and Hill, William G and Wray, Naomi R},
doi = {10.1038/nrg2322},
eprint = {arXiv:1011.1669v3},
issn = {1471-0064},
journal = {Nat. Rev. Genet.},
number = {4},
pages = {255--266},
pmid = {18319743},
title = {{Heritability in the genomics era--concepts and misconceptions.}},
volume = {9},
year = {2008}
}
@article{Giambartolomei2014,
abstract = {Genetic association studies, in particular the genome-wide association study design, have provided a wealth of novel insights into the aetiology of a wide range of human diseases and traits. The next challenge consists of understanding the molecular basis of these associations. The integration of multiple association datasets, including gene expression datasets, can contribute to this goal. We have developed a novel statistical methodology to assess whether two association signals are consistent with a shared causal variant. An application is the integration of disease scans with expression quantitative trait locus (eQTL) studies, but any pair of GWAS datasets can be integrated in this framework. We demonstrate the value of the approach by reanalysing a gene expression dataset in 966 liver samples with a published meta-analysis of lipid traits including {\textgreater}100, 000 individuals of European ancestry. Combining all lipid biomarkers, our reanalysis supported 29 out of 38 reported colocalisation results with eQTLs and identified 14 new colocalisation results, highlighting the value of a formal statistical test. In two cases of reported eQTL-lipid pairs (IFT172, TBKBP1) for which our analysis suggests that the eQTL pattern is not consistent with the lipid association, we identify alternative colocalisation results with GCKR and KPNB1, indicating that these genes are more likely to be causal in these genomic intervals. A key feature of the method is the ability to derive the output statistics from single SNP summary statistics, hence making it possible to perform systematic meta-analysis type comparisons across multiple GWAS datasets (http://coloc.cs.ucl.ac.uk/coloc/). Our methodology provides information about candidate causal genes in associated intervals and has direct implications for the understanding of complex diseases and the design of drugs to target disease pathways.},
archivePrefix = {arXiv},
arxivId = {1305.4022},
author = {Giambartolomei, Claudia and Vukcevic, Damjan and Schadt, Eric E. and Franke, Lude and Hingorani, Aroon D. and Wallace, Chris and Plagnol, Vincent},
doi = {10.1371/journal.pgen.1004383},
eprint = {1305.4022},
isbn = {1553-7404 (Electronic)$\backslash$r1553-7390 (Linking)},
issn = {15537404},
journal = {PLoS Genet.},
number = {5},
pmid = {24830394},
title = {{Bayesian Test for Colocalisation between Pairs of Genetic Association Studies Using Summary Statistics}},
volume = {10},
year = {2014}
}
@article{Ardlie2015,
abstract = {Understanding the functional consequences of genetic variation, and how it affects complex human disease and quantitative traits, remains a critical challenge for biomedicine. We present an analysis of RNA sequencing data from 1641 samples across 43 tissues from 175 individuals, generated as part of the pilot phase of the Genotype-Tissue Expression (GTEx) project. We describe the landscape of gene expression across tissues, catalog thousands of tissue-specific and shared regulatory expression quantitative trait loci (eQTL) variants, describe complex network relationships, and identify signals from genome-wide association studies explained by eQTLs. These findings provide a systematic understanding of the cellular and biological consequences of human genetic variation and of the heterogeneity of such effects among a diverse set of human tissues.$\backslash$nExpression, genetic variation, and tissues$\backslash$nHuman genomes show extensive genetic variation across individuals, but we have only just started documenting the effects of this variation on the regulation of gene expression. Furthermore, only a few tissues have been examined per genetic variant. In order to examine how genetic expression varies among tissues within individuals, the Genotype-Tissue Expression (GTEx) Consortium collected 1641 postmortem samples covering 54 body sites from 175 individuals. They identified quantitative genetic traits that affect gene expression and determined which of these exhibit tissue-specific expression patterns. Mel{\'{e}} et al. measured how transcription varies among tissues, and Rivas et al. looked at how truncated protein variants affect expression across tissues.$\backslash$nScience, this issue p. 648, p. 660, p. 666; see also p. 640},
author = {Ardlie, Kristin G. and DeLuca, David S. and Segr{\`{e}}, Ayellet V. and Sullivan, Timothy J. and Young, Taylor R. and Gelfand, Ellen T. and Trowbridge, Casandra A. and Maller, Julian B. and Tukiainen, Taru and Lek, Monkol and Ward, Lucas D. and Kheradpour, Pouya and Iriarte, Benjamin and Meng, Yan and Palmer, Cameron D. and Esko, T{\~{o}}nu and Winckler, Wendy and Hirschhorn, Joel N. and Kellis, Manolis and MacArthur, Daniel G. and Getz, Gad and Shabalin, Andrey A. and Li, Gen and Zhou, Yi Hui and Nobel, Andrew B. and Rusyn, Ivan and Wright, Fred A. and Lappalainen, Tuuli and Ferreira, Pedro G. and Ongen, Halit and Rivas, Manuel A. and Battle, Alexis and Mostafavi, Sara and Monlong, Jean and Sammeth, Michael and Mel{\'{e}}, Marta and Reverter, Ferran and Goldmann, Jakob M. and Koller, Daphne and Guig{\'{o}}, Roderic and McCarthy, Mark I. and Dermitzakis, Emmanouil T. and Gamazon, Eric R. and Im, Hae Kyung and Konkashbaev, Anuar and Nicolae, Dan L. and Cox, Nancy J. and Flutre, Timoth{\'{e}}e and Wen, Xiaoquan and Stephens, Matthew and Pritchard, Jonathan K. and Tu, Zhidong and Zhang, Bin and Huang, Tao and Long, Quan and Lin, Luan and Yang, Jialiang and Zhu, Jun and Liu, Jun and Brown, Amanda and Mestichelli, Bernadette and Tidwell, Denee and Lo, Edmund and Salvatore, Michael and Shad, Saboor and Thomas, Jeffrey A. and Lonsdale, John T. and Moser, Michael T. and Gillard, Bryan M. and Karasik, Ellen and Ramsey, Kimberly and Choi, Christopher and Foster, Barbara A. and Syron, John and Fleming, Johnell and Magazine, Harold and Hasz, Rick and Walters, Gary D. and Bridge, Jason P. and Miklos, Mark and Sullivan, Susan and Barker, Laura K. and Traino, Heather M. and Mosavel, Maghboeba and Siminoff, Laura A. and Valley, Dana R. and Rohrer, Daniel C. and Jewell, Scott D. and Branton, Philip A. and Sobin, Leslie H. and Barcus, Mary and Qi, Liqun and McLean, Jeffrey and Hariharan, Pushpa and Um, Ki Sung and Wu, Shenpei and Tabor, David and Shive, Charles and Smith, Anna M. and Buia, Stephen A. and Undale, Anita H. and Robinson, Karna L. and Roche, Nancy and Valentino, Kimberly M. and Britton, Angela and Burges, Robin and Bradbury, Debra and Hambright, Kenneth W. and Seleski, John and Korzeniewski, Greg E. and Erickson, Kenyon and Marcus, Yvonne and Tejada, Jorge and Taherian, Mehran and Lu, Chunrong and Basile, Margaret and Mash, Deborah C. and Volpi, Simona and Struewing, Jeffery P. and Temple, Gary F. and Boyer, Joy and Colantuoni, Deborah and Little, Roger and Koester, Susan and Carithers, Latarsha J. and Moore, Helen M. and Guan, Ping and Compton, Carolyn and Sawyer, Sherilyn J. and Demchok, Joanne P. and Vaught, Jimmie B. and Rabiner, Chana A. and Lockhart},
doi = {10.1126/science.1262110},
isbn = {0036-8075},
issn = {10959203},
journal = {Science (80-. ).},
number = {6235},
pages = {648--660},
pmid = {25954001},
title = {{The Genotype-Tissue Expression (GTEx) pilot analysis: Multitissue gene regulation in humans}},
volume = {348},
year = {2015}
}
